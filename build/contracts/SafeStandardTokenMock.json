{
  "contractName": "SafeStandardTokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604080518082018252600d81527f4578616d706c6520546f6b656e0000000000000000000000000000000000000060208083019182528351808501909452600384527f544f4b000000000000000000000000000000000000000000000000000000000090840152815191929160129161008d9160009190610118565b5081516100a1906001906020850190610118565b506002805460ff191660ff9290921691909117905550506b033b2e3c9fd0803ce80000006004819055336000818152600360209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101b3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015957805160ff1916838001178555610186565b82800160010185558215610186579182015b8281111561018657825182559160200191906001019061016b565b50610192929150610196565b5090565b6101b091905b80821115610192576000815560010161019c565b90565b610af9806101c26000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c85780632e0f2625146101f25780632ff2e9dc1461021d578063313ce56714610232578063661884631461024757806370a082311461026b57806395d89b411461028c578063a3f4df7e146102a1578063a9059cbb146102b6578063d73dd623146102da578063dd62ed3e146102fe578063f76f8d7814610325575b600080fd5b3480156100eb57600080fd5b506100f461033a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a03600435166024356103c8565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b661042e565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a0360043581169060243516604435610434565b3480156101fe57600080fd5b506102076104e9565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b506101b66104ee565b34801561023e57600080fd5b506102076104fe565b34801561025357600080fd5b5061018d600160a060020a0360043516602435610507565b34801561027757600080fd5b506101b6600160a060020a03600435166105f6565b34801561029857600080fd5b506100f4610611565b3480156102ad57600080fd5b506100f461066b565b3480156102c257600080fd5b5061018d600160a060020a03600435166024356106a2565b3480156102e657600080fd5b5061018d600160a060020a0360043516602435610755565b34801561030a57600080fd5b506101b6600160a060020a03600435811690602435166107ee565b34801561033157600080fd5b506100f4610819565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045490565b600082600160a060020a0381163014156104d557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b6104e0858585610850565b95945050505050565b601281565b6b033b2e3c9fd0803ce800000081565b60025460ff1681565b336000908152600560209081526040808320600160a060020a038616845290915281205480831061055b57336000908152600560209081526040808320600160a060020a0388168452909152812055610590565b61056b818463ffffffff6109c716565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b60408051808201909152600d81527f4578616d706c6520546f6b656e00000000000000000000000000000000000000602082015281565b600082600160a060020a03811630141561074357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b61074d84846109d9565b949350505050565b336000908152600560209081526040808320600160a060020a0386168452909152812054610789908363ffffffff610aba16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60408051808201909152600381527f544f4b0000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03831660009081526003602052604081205482111561087557600080fd5b600160a060020a03841660009081526005602090815260408083203384529091529020548211156108a557600080fd5b600160a060020a03831615156108ba57600080fd5b600160a060020a0384166000908152600360205260409020546108e3908363ffffffff6109c716565b600160a060020a038086166000908152600360205260408082209390935590851681522054610918908363ffffffff610aba16565b600160a060020a03808516600090815260036020908152604080832094909455918716815260058252828120338252909152205461095c908363ffffffff6109c716565b600160a060020a03808616600081815260056020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6000828211156109d357fe5b50900390565b336000908152600360205260408120548211156109f557600080fd5b600160a060020a0383161515610a0a57600080fd5b33600090815260036020526040902054610a2a908363ffffffff6109c716565b3360009081526003602052604080822092909255600160a060020a03851681522054610a5c908363ffffffff610aba16565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b81810182811015610ac757fe5b929150505600a165627a7a72305820f7e9e9c9dc2f01291a9423036e0507ad034dea61e895a66584d7d808dda03b180029",
  "deployedBytecode": "0x6080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c85780632e0f2625146101f25780632ff2e9dc1461021d578063313ce56714610232578063661884631461024757806370a082311461026b57806395d89b411461028c578063a3f4df7e146102a1578063a9059cbb146102b6578063d73dd623146102da578063dd62ed3e146102fe578063f76f8d7814610325575b600080fd5b3480156100eb57600080fd5b506100f461033a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a03600435166024356103c8565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b661042e565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a0360043581169060243516604435610434565b3480156101fe57600080fd5b506102076104e9565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b506101b66104ee565b34801561023e57600080fd5b506102076104fe565b34801561025357600080fd5b5061018d600160a060020a0360043516602435610507565b34801561027757600080fd5b506101b6600160a060020a03600435166105f6565b34801561029857600080fd5b506100f4610611565b3480156102ad57600080fd5b506100f461066b565b3480156102c257600080fd5b5061018d600160a060020a03600435166024356106a2565b3480156102e657600080fd5b5061018d600160a060020a0360043516602435610755565b34801561030a57600080fd5b506101b6600160a060020a03600435811690602435166107ee565b34801561033157600080fd5b506100f4610819565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045490565b600082600160a060020a0381163014156104d557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b6104e0858585610850565b95945050505050565b601281565b6b033b2e3c9fd0803ce800000081565b60025460ff1681565b336000908152600560209081526040808320600160a060020a038616845290915281205480831061055b57336000908152600560209081526040808320600160a060020a0388168452909152812055610590565b61056b818463ffffffff6109c716565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b60408051808201909152600d81527f4578616d706c6520546f6b656e00000000000000000000000000000000000000602082015281565b600082600160a060020a03811630141561074357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b61074d84846109d9565b949350505050565b336000908152600560209081526040808320600160a060020a0386168452909152812054610789908363ffffffff610aba16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60408051808201909152600381527f544f4b0000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03831660009081526003602052604081205482111561087557600080fd5b600160a060020a03841660009081526005602090815260408083203384529091529020548211156108a557600080fd5b600160a060020a03831615156108ba57600080fd5b600160a060020a0384166000908152600360205260409020546108e3908363ffffffff6109c716565b600160a060020a038086166000908152600360205260408082209390935590851681522054610918908363ffffffff610aba16565b600160a060020a03808516600090815260036020908152604080832094909455918716815260058252828120338252909152205461095c908363ffffffff6109c716565b600160a060020a03808616600081815260056020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6000828211156109d357fe5b50900390565b336000908152600360205260408120548211156109f557600080fd5b600160a060020a0383161515610a0a57600080fd5b33600090815260036020526040902054610a2a908363ffffffff6109c716565b3360009081526003602052604080822092909255600160a060020a03851681522054610a5c908363ffffffff610aba16565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b81810182811015610ac757fe5b929150505600a165627a7a72305820f7e9e9c9dc2f01291a9423036e0507ad034dea61e895a66584d7d808dda03b180029",
  "sourceMap": "692:557:9:-;;;1046:201;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1081:4:9;;;;;;;;;;;;;;;;;;;1087:6;;;;;;;;;;;;;;;;463:12:33;;1081:4:9;;1087:6;886:2;;463:12:33;;-1:-1:-1;;1081:4:9;463:12:33;:::i;:::-;-1:-1:-1;481:16:33;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:33;:20;;-1:-1:-1;;503:20:33;;;;;;;;;;;;-1:-1:-1;;934:38:9;1111:12;:29;;;1155:10;-1:-1:-1;1146:20:9;;;:8;:20;;;;;;;;:37;;;1194:48;;;;;;1155:10;;-1:-1:-1;;1194:48:9;;;;;;;;;;692:557;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;692:557:9;;;-1:-1:-1;692:557:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "692:557:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:18:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:38;-1:-1:-1;;;;;1814:188:38;;;;;;;;;;;;;;;;;;;;;;;;;389:83:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:31;;;;;;;;;;;;;;;;;;;;1061:184:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:184:18;-1:-1:-1;;;;;1061:184:18;;;;;;;;;;;;853:35:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;853:35:9;;;;;;;;;;;;;;;;;;;;;;;893:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;893:79:9;;;;365:21:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:33;;;;3679:432:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:38;-1:-1:-1;;;;;3679:432:38;;;;;;;1149:99:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:31;-1:-1:-1;;;;;1149:99:31;;;;;341:20:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:33;;;;763:45:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:45:9;;;;632:154:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;632:154:18;-1:-1:-1;;;;;632:154:18;;;;;;;2926:296:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:38;-1:-1:-1;;;;;2926:296:38;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:38;-1:-1:-1;;;;;2321:153:38;;;;;;;;;;812:37:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:37:9;;;;319:18:33;;;;;;;;;;;;;;;-1:-1:-1;;319:18:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:38:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:38;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:38;1814:188;;;;:::o;389:83:31:-;455:12;;389:83;:::o;1061:184:18:-;1181:4;1163:3;-1:-1:-1;;;;;378:20:18;;393:4;378:20;;370:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:38;1221:5;1228:3;1233:6;1202:18;:38::i;:::-;1195:45;1061:184;-1:-1:-1;;;;;1061:184:18:o;853:35:9:-;886:2;853:35;:::o;893:79::-;934:38;893:79;:::o;365:21:33:-;;;;;;:::o;3679:432:38:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:38;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:38;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:38;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:38;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;4028:61;;;;;;;;;;;-1:-1:-1;4102:4:38;;3679:432;-1:-1:-1;;;3679:432:38:o;1149:99:31:-;-1:-1:-1;;;;;1227:16:31;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;341:20:33:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:45:9;;;;;;;;;;;;;;;;;;;:::o;632:154:18:-;733:4;715:3;-1:-1:-1;;;;;378:20:18;;393:4;378:20;;370:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:27;769:3;774:6;754:14;:27::i;:::-;747:34;632:154;-1:-1:-1;;;;632:154:18:o;2926:296:38:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:38;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:38;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:38;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:38;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;812:37:9:-;;;;;;;;;;;;;;;;;;;:::o;726:470:38:-;-1:-1:-1;;;;;864:15:38;;832:4;864:15;;;:8;:15;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:38;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:38;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:38;;;;;;:8;:15;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:38;;;;;;;:8;:15;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:38;;;;;;;:8;:13;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:38;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;1146:28;;;;;;;;;;;-1:-1:-1;1187:4:38;726:470;;;;;:::o;1060:116:24:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:24;;;1060:116::o;626:321:31:-;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:31;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:31;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:31;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;892:33;;;;;;;;;;-1:-1:-1;938:4:31;626:321;;;;:::o;1238:128:24:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\nimport \"../token/ERC20/SafeStandardToken.sol\";\n\n\n/**\n * @title SafeStandardToken\n * @dev ERC20 Example Token (TOK)\n *\n * TOK Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n *\n * TOK are displayed using 18 decimal places of precision.\n *\n * 1 TOK is equivalent to:\n *   1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n *\n * 1 Billion TOK (total supply) is equivalent to:\n *   1000000000 * 10**18 == 1e27\n *\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\n * tokens as they wish using `transfer` and other `StandardToken` functions.\n */\ncontract SafeStandardTokenMock is DetailedERC20, SafeStandardToken {\n  string public constant NAME = \"Example Token\";\n  string public constant SYMBOL = \"TOK\";\n  uint8 public constant DECIMALS = 18;\n\n  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** uint256(DECIMALS));\n\n  /// @dev Constructor that gives msg.sender all of existing tokens.\n  constructor() public DetailedERC20(NAME, SYMBOL, DECIMALS) {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n    emit Transfer(address(0), msg.sender, INITIAL_SUPPLY);\n  }\n}\n",
  "sourcePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/mocks/SafeStandardTokenMock.sol",
  "ast": {
    "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/mocks/SafeStandardTokenMock.sol",
    "exportedSymbols": {
      "SafeStandardTokenMock": [
        1546
      ]
    },
    "id": 1547,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1491,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1492,
        "nodeType": "ImportDirective",
        "scope": 1547,
        "sourceUnit": 3138,
        "src": "25:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/token/ERC20/SafeStandardToken.sol",
        "file": "../token/ERC20/SafeStandardToken.sol",
        "id": 1493,
        "nodeType": "ImportDirective",
        "scope": 1547,
        "sourceUnit": 2037,
        "src": "97:46:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1494,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3137,
              "src": "726:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$3137",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1495,
            "nodeType": "InheritanceSpecifier",
            "src": "726:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1496,
              "name": "SafeStandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2036,
              "src": "741:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeStandardToken_$2036",
                "typeString": "contract SafeStandardToken"
              }
            },
            "id": 1497,
            "nodeType": "InheritanceSpecifier",
            "src": "741:17:9"
          }
        ],
        "contractDependencies": [
          2036,
          3032,
          3137,
          3180,
          3212,
          3571
        ],
        "contractKind": "contract",
        "documentation": "@title SafeStandardToken\n@dev ERC20 Example Token (TOK)\n * TOK Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n * TOK are displayed using 18 decimal places of precision.\n * 1 TOK is equivalent to:\n  1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n * 1 Billion TOK (total supply) is equivalent to:\n  1000000000 * 10**18 == 1e27\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\ntokens as they wish using `transfer` and other `StandardToken` functions.",
        "fullyImplemented": true,
        "id": 1546,
        "linearizedBaseContracts": [
          1546,
          2036,
          3571,
          3032,
          3137,
          3180,
          3212
        ],
        "name": "SafeStandardTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1500,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "763:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1498,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "763:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4578616d706c6520546f6b656e",
              "id": 1499,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "793:15:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ee91e1b219a7e0d5035a50ca5bbf5771c3e24e997d7ea18b9e0dd6ad88b10f0d",
                "typeString": "literal_string \"Example Token\""
              },
              "value": "Example Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1503,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "812:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1501,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "812:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4b",
              "id": 1502,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "844:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                "typeString": "literal_string \"TOK\""
              },
              "value": "TOK"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1506,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "853:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1504,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "853:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1505,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "886:2:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1516,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "893:79:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1507,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "893:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1515,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 1508,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "934:10:9",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "948:2:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1506,
                          "src": "962:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "954:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "954:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "948:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1514,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "947:25:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "934:38:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1544,
              "nodeType": "Block",
              "src": "1105:142:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1524,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2951,
                      "src": "1111:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1525,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "1126:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1528,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "1146:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1155:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1155:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1146:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1532,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "1169:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1146:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:37:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1211:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1203:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1203:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1215:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1215:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1541,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "1227:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1535,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "1194:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "EmitStatement",
                  "src": "1189:53:9"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1545,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1519,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1500,
                    "src": "1081:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1520,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1503,
                    "src": "1087:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1521,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1506,
                    "src": "1095:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1518,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3137,
                  "src": "1067:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$3137_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:9"
            },
            "scope": 1546,
            "src": "1046:201:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1547,
        "src": "692:557:9"
      }
    ],
    "src": "0:1250:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/mocks/SafeStandardTokenMock.sol",
    "exportedSymbols": {
      "SafeStandardTokenMock": [
        1546
      ]
    },
    "id": 1547,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1491,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1492,
        "nodeType": "ImportDirective",
        "scope": 1547,
        "sourceUnit": 3138,
        "src": "25:71:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/token/ERC20/SafeStandardToken.sol",
        "file": "../token/ERC20/SafeStandardToken.sol",
        "id": 1493,
        "nodeType": "ImportDirective",
        "scope": 1547,
        "sourceUnit": 2037,
        "src": "97:46:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1494,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3137,
              "src": "726:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$3137",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1495,
            "nodeType": "InheritanceSpecifier",
            "src": "726:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1496,
              "name": "SafeStandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2036,
              "src": "741:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeStandardToken_$2036",
                "typeString": "contract SafeStandardToken"
              }
            },
            "id": 1497,
            "nodeType": "InheritanceSpecifier",
            "src": "741:17:9"
          }
        ],
        "contractDependencies": [
          2036,
          3032,
          3137,
          3180,
          3212,
          3571
        ],
        "contractKind": "contract",
        "documentation": "@title SafeStandardToken\n@dev ERC20 Example Token (TOK)\n * TOK Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n * TOK are displayed using 18 decimal places of precision.\n * 1 TOK is equivalent to:\n  1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n * 1 Billion TOK (total supply) is equivalent to:\n  1000000000 * 10**18 == 1e27\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\ntokens as they wish using `transfer` and other `StandardToken` functions.",
        "fullyImplemented": true,
        "id": 1546,
        "linearizedBaseContracts": [
          1546,
          2036,
          3571,
          3032,
          3137,
          3180,
          3212
        ],
        "name": "SafeStandardTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1500,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "763:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1498,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "763:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4578616d706c6520546f6b656e",
              "id": 1499,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "793:15:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ee91e1b219a7e0d5035a50ca5bbf5771c3e24e997d7ea18b9e0dd6ad88b10f0d",
                "typeString": "literal_string \"Example Token\""
              },
              "value": "Example Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1503,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "812:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1501,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "812:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4b",
              "id": 1502,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "844:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92ec8c068e88c9c67ad1e93c5fb28a0afc1877fa1cdd216a8e4e432482417ddd",
                "typeString": "literal_string \"TOK\""
              },
              "value": "TOK"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1506,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "853:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1504,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "853:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1505,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "886:2:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1516,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1546,
            "src": "893:79:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1507,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "893:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1515,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 1508,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "934:10:9",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "948:2:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1506,
                          "src": "962:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "954:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "954:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "948:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1514,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "947:25:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "934:38:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1544,
              "nodeType": "Block",
              "src": "1105:142:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1524,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2951,
                      "src": "1111:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1525,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "1126:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:29:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1528,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "1146:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1531,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1155:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1155:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1146:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1532,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "1169:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1146:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:37:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1211:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1203:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1203:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1215:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1215:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1541,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "1227:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1535,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "1194:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "EmitStatement",
                  "src": "1189:53:9"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1545,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1519,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1500,
                    "src": "1081:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1520,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1503,
                    "src": "1087:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1521,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1506,
                    "src": "1095:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1518,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3137,
                  "src": "1067:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$3137_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:37:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:9"
            },
            "scope": 1546,
            "src": "1046:201:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1547,
        "src": "692:557:9"
      }
    ],
    "src": "0:1250:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-06T19:26:20.516Z"
}