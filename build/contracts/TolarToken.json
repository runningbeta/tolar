{
  "contractName": "TolarToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526000805460a060020a60ff02191690553480156200002157600080fd5b50604080518082018252600b81527f546f6c617220546f6b656e0000000000000000000000000000000000000000006020808301919091528251808401909352600383527f544f4c00000000000000000000000000000000000000000000000000000000009083015260008054600160a060020a031916331790559060123415620000ab57600080fd5b8251620000c09060019060208601906200014e565b508151620000d69060029060208501906200014e565b506003805460ff191660ff9290921691909117905550506b033b2e3c9fd0803ce80000006005819055336000818152600460209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3620001f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019157805160ff1916838001178555620001c1565b82800160010185558215620001c1579182015b82811115620001c1578251825591602001919060010190620001a4565b50620001cf929150620001d3565b5090565b620001f091905b80821115620001cf5760008155600101620001da565b90565b6113f980620002036000396000f3006080604052600436106101535763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610162578063095ea7b3146101ec57806317ffc3201461022457806318160ddd1461024757806323b872dd1461026e5780632aed7f3f146102985780632e0f2625146102b95780632ff2e9dc146102e4578063313ce567146102f957806342966c681461030e5780634bb278f314610326578063661884631461033b57806370a082311461035f578063715018a61461038057806379cc6790146103955780638d4e4083146103b95780638da5cb5b146103ce57806395d89b41146103ff5780639f727c2714610414578063a3f4df7e14610429578063a9059cbb1461043e578063c0ee0b8a14610462578063d73dd62314610493578063dd62ed3e146104b7578063f2fde38b146104de578063f76f8d78146104ff575b34801561015f57600080fd5b50005b34801561016e57600080fd5b50610177610514565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b1578181015183820152602001610199565b50505050905090810190601f1680156101de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f857600080fd5b50610210600160a060020a03600435166024356105a1565b604080519115158252519081900360200190f35b34801561023057600080fd5b50610245600160a060020a0360043516610607565b005b34801561025357600080fd5b5061025c6106d3565b60408051918252519081900360200190f35b34801561027a57600080fd5b50610210600160a060020a03600435811690602435166044356106d9565b3480156102a457600080fd5b50610245600160a060020a036004351661078e565b3480156102c557600080fd5b506102ce610828565b6040805160ff9092168252519081900360200190f35b3480156102f057600080fd5b5061025c61082d565b34801561030557600080fd5b506102ce61083d565b34801561031a57600080fd5b50610245600435610846565b34801561033257600080fd5b50610245610853565b34801561034757600080fd5b50610210600160a060020a036004351660243561095c565b34801561036b57600080fd5b5061025c600160a060020a0360043516610a4b565b34801561038c57600080fd5b50610245610a66565b3480156103a157600080fd5b50610245600160a060020a0360043516602435610ad2565b3480156103c557600080fd5b50610210610b64565b3480156103da57600080fd5b506103e3610b85565b60408051600160a060020a039092168252519081900360200190f35b34801561040b57600080fd5b50610177610b94565b34801561042057600080fd5b50610245610bec565b34801561043557600080fd5b50610177610c3e565b34801561044a57600080fd5b50610210600160a060020a0360043516602435610c75565b34801561046e57600080fd5b5061024560048035600160a060020a0316906024803591604435918201910135610d28565b34801561049f57600080fd5b50610210600160a060020a0360043516602435610d2d565b3480156104c357600080fd5b5061025c600160a060020a0360043581169060243516610dc6565b3480156104ea57600080fd5b50610245600160a060020a0360043516610df1565b34801561050b57600080fd5b50610177610e11565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b505050505081565b336000818152600660209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60008054600160a060020a0316331461061f57600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b505050506040513d60208110156106aa57600080fd5b50516000549091506106cf90600160a060020a0384811691168363ffffffff610e4816565b5050565b60055490565b600082600160a060020a03811630141561077a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b610785858585610f00565b95945050505050565b60008054600160a060020a031633146107a657600080fd5b5060008054604080517ff2fde38b000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152905184939284169263f2fde38b926024808201939182900301818387803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050505050565b601281565b6b033b2e3c9fd0803ce800000081565b60035460ff1681565b6108503382611077565b50565b600054600160a060020a0316331461086a57600080fd5b60005474010000000000000000000000000000000000000000900460ff16156108f457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436f6e747261637420616c72656164792066696e616c697a65642e0000000000604482015290519081900360640190fd5b6108fc611147565b6040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a16000805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b336000908152600660209081526040808320600160a060020a03861684529091528120548083106109b057336000908152600660209081526040808320600160a060020a03881684529091528120556109e5565b6109c0818463ffffffff61114916565b336000908152600660209081526040808320600160a060020a03891684529091529020555b336000818152600660209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526004602052604090205490565b600054600160a060020a03163314610a7d57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600160a060020a0382166000908152600660209081526040808320338452909152902054811115610b0257600080fd5b600160a060020a0382166000908152600660209081526040808320338452909152902054610b36908263ffffffff61114916565b600160a060020a03831660009081526006602090815260408083203384529091529020556106cf8282611077565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156105995780601f1061056e57610100808354040283529160200191610599565b600054600160a060020a03163314610c0357600080fd5b60008054604051600160a060020a0390911691303180156108fc02929091818181858888f19350505050158015610850573d6000803e3d6000fd5b60408051808201909152600b81527f546f6c617220546f6b656e000000000000000000000000000000000000000000602082015281565b600082600160a060020a038116301415610d1657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5472616e73666572696e6720746f6b656e7320746f207468697320636f6e747260448201527f6163742061646472657373206973206e6f7420616c6c6f7765642e0000000000606482015290519081900360840190fd5b610d20848461115b565b949350505050565b600080fd5b336000908152600660209081526040808320600160a060020a0386168452909152812054610d61908363ffffffff61123c16565b336000818152600660209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b600054600160a060020a03163314610e0857600080fd5b6108508161124f565b60408051808201909152600381527f544f4c0000000000000000000000000000000000000000000000000000000000602082015281565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610ec457600080fd5b505af1158015610ed8573d6000803e3d6000fd5b505050506040513d6020811015610eee57600080fd5b50511515610efb57600080fd5b505050565b600160a060020a038316600090815260046020526040812054821115610f2557600080fd5b600160a060020a0384166000908152600660209081526040808320338452909152902054821115610f5557600080fd5b600160a060020a0383161515610f6a57600080fd5b600160a060020a038416600090815260046020526040902054610f93908363ffffffff61114916565b600160a060020a038086166000908152600460205260408082209390935590851681522054610fc8908363ffffffff61123c16565b600160a060020a03808516600090815260046020908152604080832094909455918716815260068252828120338252909152205461100c908363ffffffff61114916565b600160a060020a03808616600081815260066020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60005474010000000000000000000000000000000000000000900460ff16806110aa5750600054600160a060020a031633145b151561113d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f436f6e7472616374206e6f742066696e616c697a6564206f722073656e64657260448201527f206e6f74206f776e65722e000000000000000000000000000000000000000000606482015290519081900360840190fd5b6106cf82826112cc565b565b60008282111561115557fe5b50900390565b3360009081526004602052604081205482111561117757600080fd5b600160a060020a038316151561118c57600080fd5b336000908152600460205260409020546111ac908363ffffffff61114916565b3360009081526004602052604080822092909255600160a060020a038516815220546111de908363ffffffff61123c16565b600160a060020a0384166000818152600460209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b8181018281101561124957fe5b92915050565b600160a060020a038116151561126457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382166000908152600460205260409020548111156112f157600080fd5b600160a060020a03821660009081526004602052604090205461131a908263ffffffff61114916565b600160a060020a038316600090815260046020526040902055600554611346908263ffffffff61114916565b600555604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350505600a165627a7a72305820979d7b2a70ed1bebaba81b8bab5fdc5f428d9070f95d6b50c88608fbd1575df40029",
  "deployedBytecode": "",
  "sourceMap": "1002:1044:3:-;;;680:5:5;654:31;;-1:-1:-1;;;;;;654:31:5;;;1595:201:3;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1630:4:3;;;;;;;;;;;;;;;;;;;;1636:6;;;;;;;;;;;;;;;;-1:-1:-1;567:18:23;;-1:-1:-1;;;;;;567:18:23;575:10;567:18;;;1630:4:3;1229:2;958:9:20;:14;950:23;;;;;;463:12:26;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;481:16:26;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:26;:20;;-1:-1:-1;;503:20:26;;;;;;;;;;;;-1:-1:-1;;1277:38:3;1660:12;:29;;;1704:10;-1:-1:-1;1695:20:3;;;:8;:20;;;;;;;;:37;;;1743:48;;;;;;1704:10;;-1:-1:-1;;1743:48:3;;;;;;;;;;1002:1044;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1002:1044:3;;;-1:-1:-1;1002:1044:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1002:1044:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:1044:3;;319:18:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:31;-1:-1:-1;;;;;1814:188:31;;;;;;;;;;;;;;;;;;;;;;;;;599:152:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;599:152:18;-1:-1:-1;;;;;599:152:18;;;;;;;389:83:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:24;;;;;;;;;;;;;;;;;;;;1061:184:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:184:11;-1:-1:-1;;;;;1061:184:11;;;;;;;;;;;;482:166:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;482:166:19;-1:-1:-1;;;;;482:166:19;;;;;1196:35:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1196:35:3;;;;;;;;;;;;;;;;;;;;;;;1236:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1236:79:3;;;;365:21:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:26;;;;353:73:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:25;;;;;835:126:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;835:126:5;;;;3679:432:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:31;-1:-1:-1;;;;;3679:432:31;;;;;;;1149:99:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:24;-1:-1:-1;;;;;1149:99:24;;;;;1001:111:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:23;;;;490:370:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;490:370:30;-1:-1:-1;;;;;490:370:30;;;;;;;654:31:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:31:5;;;;238:20:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:23;;;;;;;;-1:-1:-1;;;;;238:20:23;;;;;;;;;;;;;;341::26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:26;;;;1189:91:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1189:91:20;;;;1108:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1108:43:3;;;;632:154:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;632:154:11;-1:-1:-1;;;;;632:154:11;;;;;;;637:160:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:160:21;;;;-1:-1:-1;;;;;637:160:21;;;;;;;;;;;;;;;;2926:296:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:31;-1:-1:-1;;;;;2926:296:31;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:31;-1:-1:-1;;;;;2321:153:31;;;;;;;;;;1274:103:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:23;-1:-1:-1;;;;;1274:103:23;;;;;1155:37:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1155:37:3;;;;319:18:26;;;;;;;;;;;;;;;-1:-1:-1;;319:18:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:31:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:31;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:31;1814:188;;;;:::o;599:152:18:-;665:15;719:5:23;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;683:22:18;;;;;;700:4;683:22;;;;;;-1:-1:-1;;;;;683:16:18;;;;;:22;;;;;;;;;;;;;;-1:-1:-1;683:16:18;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;683:22:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;683:22:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;683:22:18;731:5;;683:22;;-1:-1:-1;711:35:18;;-1:-1:-1;;;;;711:19:18;;;;731:5;683:22;711:35;:19;:35;:::i;:::-;599:152;;:::o;389:83:24:-;455:12;;389:83;:::o;1061:184:11:-;1181:4;1163:3;-1:-1:-1;;;;;378:20:11;;393:4;378:20;;370:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:38;1221:5;1228:3;1233:6;1202:18;:38::i;:::-;1195:45;1061:184;-1:-1:-1;;;;;1061:184:11:o;482:166:19:-;555:20;719:5:23;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;-1:-1:-1;637:5:19;;;606:37;;;;;;-1:-1:-1;;;;;637:5:19;;;606:37;;;;;;586:13;;606:30;;;;;;:37;;;;;;;;;;;637:5;606:30;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;606:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;606:37:19;;;;482:166;;:::o;1196:35:3:-;1229:2;1196:35;:::o;1236:79::-;1277:38;1236:79;:::o;365:21:26:-;;;;;;:::o;353:73:25:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;835:126:5:-;719:5:23;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;595:11:5;;;;;;;594:12;586:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:14;:12;:14::i;:::-;920:11;;;;;;;938;:18;;-1:-1:-1;;938:18:5;;;;;835:126::o;3679:432:31:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:31;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:31;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:31;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:31;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;4028:61;;;;;;;;;;;-1:-1:-1;4102:4:31;;3679:432;-1:-1:-1;;;3679:432:31:o;1149:99:24:-;-1:-1:-1;;;;;1227:16:24;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;1001:111:23:-;719:5;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:23;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:23;;;1001:111::o;490:370:30:-;-1:-1:-1;;;;;570:14:30;;;;;;:7;:14;;;;;;;;585:10;570:26;;;;;;;;560:36;;;552:45;;;;;;-1:-1:-1;;;;;791:14:30;;;;;;:7;:14;;;;;;;;806:10;791:26;;;;;;;;:38;;822:6;791:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;762:14:30;;;;;;:7;:14;;;;;;;;777:10;762:26;;;;;;;:67;835:20;770:5;848:6;835:5;:20::i;654:31:5:-;;;;;;;;;:::o;238:20:23:-;;;-1:-1:-1;;;;;238:20:23;;:::o;341::26:-;;;;;;;;;;;;;;-1:-1:-1;;341:20:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:91:20;719:5:23;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;1238:5:20;;;:37;;-1:-1:-1;;;;;1238:5:20;;;;1261:4;1253:21;1238:37;;;;;1253:21;;1238:37;:5;:37;1253:21;1238:5;:37;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1108:43:3;;;;;;;;;;;;;;;;;;;:::o;632:154:11:-;733:4;715:3;-1:-1:-1;;;;;378:20:11;;393:4;378:20;;370:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:27;769:3;774:6;754:14;:27::i;:::-;747:34;632:154;-1:-1:-1;;;;632:154:11:o;637:160:21:-;784:8;;;2926:296:31;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:31;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:31;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:31;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:31;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1274:103:23:-;719:5;;-1:-1:-1;;;;;719:5:23;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;1155:37:3:-;;;;;;;;;;;;;;;;;;;:::o;368:149:29:-;483:6;-1:-1:-1;;;;;483:15:29;;499:3;504:6;483:28;;;;;;;;;;;;;-1:-1:-1;;;;;483:28:29;-1:-1:-1;;;;;483:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:28:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;483:28:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;483:28:29;475:37;;;;;;;;368:149;;;:::o;726:470:31:-;-1:-1:-1;;;;;864:15:31;;832:4;864:15;;;:8;:15;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:31;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:31;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:31;;;;;;:8;:15;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:31;;;;;;;:8;:15;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:31;;;;;;;:8;:13;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:31;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;1146:28;;;;;;;;;;;-1:-1:-1;1187:4:31;726:470;;;;;:::o;1932:111:3:-;1428:11;;;;;;;;:34;;-1:-1:-1;1457:5:3;;-1:-1:-1;;;;;1457:5:3;1443:10;:19;1428:34;1420:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:25;2025:4;2031:6;2013:11;:25::i;1157:54:5:-;:::o;1060:116:17:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:17;;;1060:116::o;626:321:24:-;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:24;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:24;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:24;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;892:33;;;;;;;;;;-1:-1:-1;938:4:24;626:321;;;;:::o;1238:128:17:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;1512:171:23:-;-1:-1:-1;;;;;1582:23:23;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:23;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:23;-1:-1:-1;;;;;1661:17:23;;;;;;;;;;1512:171::o;430:438:25:-;-1:-1:-1;;;;;508:14:25;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:25;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:25;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:25;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:25;;;;;;;;;;;;430:438;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/ownership/NoOwner.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol\";\nimport \"./lifecycle/Finalizable.sol\";\nimport \"./token/ERC20/SafeStandardToken.sol\";\n\n\n/**\n * @title TolarToken\n * @dev ERC20 Tolar Token (TOL)\n *\n * TOL Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n *\n * TOL are displayed using 18 decimal places of precision.\n *\n * 1 TOL is equivalent to:\n *   1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n *\n * 1 Billion TOL (total supply) is equivalent to:\n *   1000000000 * 10**18 == 1e27\n *\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\n * tokens as they wish using `transfer` and other `StandardToken` functions.\n * This is a BurnableToken where users can burn tokens when the burning functionality is\n * enabled (contract is finalized) by the owner.\n */\ncontract TolarToken is NoOwner, Finalizable, DetailedERC20, SafeStandardToken, StandardBurnableToken {\n\n  string public constant NAME = \"Tolar Token\";\n  string public constant SYMBOL = \"TOL\";\n  uint8 public constant DECIMALS = 18;\n\n  uint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** uint256(DECIMALS));\n\n  /// @dev Throws if called before the contract is finalized.\n  modifier onlyFinalizedOrOwner() {\n    require(isFinalized || msg.sender == owner, \"Contract not finalized or sender not owner.\");\n    _;\n  }\n\n  /// @dev Constructor that gives msg.sender all of existing tokens.\n  constructor() public DetailedERC20(NAME, SYMBOL, DECIMALS) {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n    emit Transfer(address(0), msg.sender, INITIAL_SUPPLY);\n  }\n\n  /**\n   * @dev Overrides StandardToken._burn in order for burn and burnFrom to be disabled\n   * when the contract is paused.\n   */\n  function _burn(address _who, uint256 _value) internal onlyFinalizedOrOwner {\n    super._burn(_who, _value);\n  }\n\n}\n",
  "sourcePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/TolarToken.sol",
  "ast": {
    "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/TolarToken.sol",
    "exportedSymbols": {
      "TolarToken": [
        1213
      ]
    },
    "id": 1214,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1118,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/NoOwner.sol",
        "file": "openzeppelin-solidity/contracts/ownership/NoOwner.sol",
        "id": 1119,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2487,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1120,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2774,
        "src": "89:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
        "id": 1121,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2961,
        "src": "161:79:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/lifecycle/Finalizable.sol",
        "file": "./lifecycle/Finalizable.sol",
        "id": 1122,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1348,
        "src": "241:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/token/ERC20/SafeStandardToken.sol",
        "file": "./token/ERC20/SafeStandardToken.sol",
        "id": 1123,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1673,
        "src": "279:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1124,
              "name": "NoOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2486,
              "src": "1025:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoOwner_$2486",
                "typeString": "contract NoOwner"
              }
            },
            "id": 1125,
            "nodeType": "InheritanceSpecifier",
            "src": "1025:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1126,
              "name": "Finalizable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1347,
              "src": "1034:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Finalizable_$1347",
                "typeString": "contract Finalizable"
              }
            },
            "id": 1127,
            "nodeType": "InheritanceSpecifier",
            "src": "1034:11:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1128,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2773,
              "src": "1047:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$2773",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1129,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1130,
              "name": "SafeStandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1672,
              "src": "1062:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeStandardToken_$1672",
                "typeString": "contract SafeStandardToken"
              }
            },
            "id": 1131,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1132,
              "name": "StandardBurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2960,
              "src": "1081:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardBurnableToken_$2960",
                "typeString": "contract StandardBurnableToken"
              }
            },
            "id": 1133,
            "nodeType": "InheritanceSpecifier",
            "src": "1081:21:3"
          }
        ],
        "contractDependencies": [
          1347,
          1672,
          2387,
          2413,
          2449,
          2474,
          2486,
          2572,
          2668,
          2739,
          2773,
          2816,
          2848,
          2960,
          3207
        ],
        "contractKind": "contract",
        "documentation": "@title TolarToken\n@dev ERC20 Tolar Token (TOL)\n * TOL Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n * TOL are displayed using 18 decimal places of precision.\n * 1 TOL is equivalent to:\n  1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n * 1 Billion TOL (total supply) is equivalent to:\n  1000000000 * 10**18 == 1e27\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\ntokens as they wish using `transfer` and other `StandardToken` functions.\nThis is a BurnableToken where users can burn tokens when the burning functionality is\nenabled (contract is finalized) by the owner.",
        "fullyImplemented": true,
        "id": 1213,
        "linearizedBaseContracts": [
          1213,
          2960,
          1672,
          3207,
          2739,
          2668,
          2773,
          2816,
          2848,
          1347,
          2486,
          2413,
          2474,
          2387,
          2449,
          2572
        ],
        "name": "TolarToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1136,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1108:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1134,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1108:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546f6c617220546f6b656e",
              "id": 1135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1138:13:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1e69357bd4f72ab923c6ef9ec9b5b39f76092ea70107f7ce3ce8195810204869",
                "typeString": "literal_string \"Tolar Token\""
              },
              "value": "Tolar Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1139,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1155:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1137,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1155:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4c",
              "id": 1138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1187:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_115be9f661109ce35af07bab157a55bb7dd78a20038b8d56c2c22bc4a1d0ef3c",
                "typeString": "literal_string \"TOL\""
              },
              "value": "TOL"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1142,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1196:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1140,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1196:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1229:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1152,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1236:79:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 1144,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1277:10:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1291:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1305:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1297:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1297:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1291:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1150,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1290:25:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1277:38:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1414:108:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1155,
                          "name": "isFinalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1322,
                          "src": "1428:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3222,
                              "src": "1443:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1443:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1158,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "1457:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1443:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1428:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7472616374206e6f742066696e616c697a6564206f722073656e646572206e6f74206f776e65722e",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1464:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5df1cbc01dc07408faf7a28fca48ddcd5cf9732aab27fc56c283aee90f8fb2d",
                          "typeString": "literal_string \"Contract not finalized or sender not owner.\""
                        },
                        "value": "Contract not finalized or sender not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5df1cbc01dc07408faf7a28fca48ddcd5cf9732aab27fc56c283aee90f8fb2d",
                          "typeString": "literal_string \"Contract not finalized or sender not owner.\""
                        }
                      ],
                      "id": 1154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3225,
                        3226
                      ],
                      "referencedDeclaration": 3226,
                      "src": "1420:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:90:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:90:3"
                },
                {
                  "id": 1164,
                  "nodeType": "PlaceholderStatement",
                  "src": "1516:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if called before the contract is finalized.",
            "id": 1166,
            "name": "onlyFinalizedOrOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:2:3"
            },
            "src": "1382:140:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "1654:142:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1174,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "1660:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1175,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "1675:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1178,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "1695:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3222,
                          "src": "1704:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1704:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1695:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1182,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "1718:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1695:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1760:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1752:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1752:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3222,
                          "src": "1764:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1764:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "1776:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1185,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2847,
                      "src": "1743:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1743:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "1738:53:3"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1195,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1169,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1136,
                    "src": "1630:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1170,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1139,
                    "src": "1636:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1171,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1142,
                    "src": "1644:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1168,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2773,
                  "src": "1616:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$2773_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1616:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:3"
            },
            "scope": 1213,
            "src": "1595:201:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "2007:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "2025:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2031:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1204,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "2013:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TolarToken_$1213",
                          "typeString": "contract super TolarToken"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2738,
                      "src": "2013:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:25:3"
                }
              ]
            },
            "documentation": "@dev Overrides StandardToken._burn in order for burn and burnFrom to be disabled\nwhen the contract is paused.",
            "id": 1212,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1201,
                  "name": "onlyFinalizedOrOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1166,
                  "src": "1986:20:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:20:3"
              }
            ],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "name": "_who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "1947:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "1961:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1946:30:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2007:0:3"
            },
            "scope": 1213,
            "src": "1932:111:3",
            "stateMutability": "nonpayable",
            "superFunction": 2738,
            "visibility": "internal"
          }
        ],
        "scope": 1214,
        "src": "1002:1044:3"
      }
    ],
    "src": "0:2047:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/TolarToken.sol",
    "exportedSymbols": {
      "TolarToken": [
        1213
      ]
    },
    "id": 1214,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1118,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/NoOwner.sol",
        "file": "openzeppelin-solidity/contracts/ownership/NoOwner.sol",
        "id": 1119,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2487,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 1120,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2774,
        "src": "89:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol",
        "id": 1121,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2961,
        "src": "161:79:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/lifecycle/Finalizable.sol",
        "file": "./lifecycle/Finalizable.sol",
        "id": 1122,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1348,
        "src": "241:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/krebernisak/Documents/workspace/work/runningbeta/weinorth/tolar/contracts/token/ERC20/SafeStandardToken.sol",
        "file": "./token/ERC20/SafeStandardToken.sol",
        "id": 1123,
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1673,
        "src": "279:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1124,
              "name": "NoOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2486,
              "src": "1025:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoOwner_$2486",
                "typeString": "contract NoOwner"
              }
            },
            "id": 1125,
            "nodeType": "InheritanceSpecifier",
            "src": "1025:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1126,
              "name": "Finalizable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1347,
              "src": "1034:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Finalizable_$1347",
                "typeString": "contract Finalizable"
              }
            },
            "id": 1127,
            "nodeType": "InheritanceSpecifier",
            "src": "1034:11:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1128,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2773,
              "src": "1047:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$2773",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 1129,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1130,
              "name": "SafeStandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1672,
              "src": "1062:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeStandardToken_$1672",
                "typeString": "contract SafeStandardToken"
              }
            },
            "id": 1131,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1132,
              "name": "StandardBurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2960,
              "src": "1081:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardBurnableToken_$2960",
                "typeString": "contract StandardBurnableToken"
              }
            },
            "id": 1133,
            "nodeType": "InheritanceSpecifier",
            "src": "1081:21:3"
          }
        ],
        "contractDependencies": [
          1347,
          1672,
          2387,
          2413,
          2449,
          2474,
          2486,
          2572,
          2668,
          2739,
          2773,
          2816,
          2848,
          2960,
          3207
        ],
        "contractKind": "contract",
        "documentation": "@title TolarToken\n@dev ERC20 Tolar Token (TOL)\n * TOL Tokens are divisible by 1e18 (1 000 000 000 000 000 000) base.\n * TOL are displayed using 18 decimal places of precision.\n * 1 TOL is equivalent to:\n  1 000 000 000 000 000 000 == 1 * 10**18 == 1e18\n * 1 Billion TOL (total supply) is equivalent to:\n  1000000000 * 10**18 == 1e27\n * @notice All tokens are pre-assigned to the creator. Note they can later distribute these\ntokens as they wish using `transfer` and other `StandardToken` functions.\nThis is a BurnableToken where users can burn tokens when the burning functionality is\nenabled (contract is finalized) by the owner.",
        "fullyImplemented": true,
        "id": 1213,
        "linearizedBaseContracts": [
          1213,
          2960,
          1672,
          3207,
          2739,
          2668,
          2773,
          2816,
          2848,
          1347,
          2486,
          2413,
          2474,
          2387,
          2449,
          2572
        ],
        "name": "TolarToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1136,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1108:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1134,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1108:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546f6c617220546f6b656e",
              "id": 1135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1138:13:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1e69357bd4f72ab923c6ef9ec9b5b39f76092ea70107f7ce3ce8195810204869",
                "typeString": "literal_string \"Tolar Token\""
              },
              "value": "Tolar Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1139,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1155:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1137,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1155:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "544f4c",
              "id": 1138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1187:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_115be9f661109ce35af07bab157a55bb7dd78a20038b8d56c2c22bc4a1d0ef3c",
                "typeString": "literal_string \"TOL\""
              },
              "value": "TOL"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1142,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1196:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1140,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1196:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1229:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1152,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "1236:79:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 1144,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1277:10:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1291:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "1305:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1297:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1297:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1291:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1150,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1290:25:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1277:38:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1414:108:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1155,
                          "name": "isFinalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1322,
                          "src": "1428:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3222,
                              "src": "1443:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1443:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1158,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "1457:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1443:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1428:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7472616374206e6f742066696e616c697a6564206f722073656e646572206e6f74206f776e65722e",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1464:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5df1cbc01dc07408faf7a28fca48ddcd5cf9732aab27fc56c283aee90f8fb2d",
                          "typeString": "literal_string \"Contract not finalized or sender not owner.\""
                        },
                        "value": "Contract not finalized or sender not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5df1cbc01dc07408faf7a28fca48ddcd5cf9732aab27fc56c283aee90f8fb2d",
                          "typeString": "literal_string \"Contract not finalized or sender not owner.\""
                        }
                      ],
                      "id": 1154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3225,
                        3226
                      ],
                      "referencedDeclaration": 3226,
                      "src": "1420:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:90:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:90:3"
                },
                {
                  "id": 1164,
                  "nodeType": "PlaceholderStatement",
                  "src": "1516:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if called before the contract is finalized.",
            "id": 1166,
            "name": "onlyFinalizedOrOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:2:3"
            },
            "src": "1382:140:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "1654:142:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1174,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "1660:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1175,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "1675:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1178,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "1695:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3222,
                          "src": "1704:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1704:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1695:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1182,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "1718:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1695:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:37:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1760:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1752:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1752:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3222,
                          "src": "1764:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1764:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "1776:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1185,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2847,
                      "src": "1743:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1743:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "1738:53:3"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens.",
            "id": 1195,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1169,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1136,
                    "src": "1630:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1170,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1139,
                    "src": "1636:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1171,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1142,
                    "src": "1644:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1168,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2773,
                  "src": "1616:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$2773_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1616:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:3"
            },
            "scope": 1213,
            "src": "1595:201:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "2007:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "2025:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2031:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1204,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "2013:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TolarToken_$1213",
                          "typeString": "contract super TolarToken"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2738,
                      "src": "2013:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:25:3"
                }
              ]
            },
            "documentation": "@dev Overrides StandardToken._burn in order for burn and burnFrom to be disabled\nwhen the contract is paused.",
            "id": 1212,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1201,
                  "name": "onlyFinalizedOrOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1166,
                  "src": "1986:20:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:20:3"
              }
            ],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "name": "_who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "1947:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "1961:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1946:30:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2007:0:3"
            },
            "scope": 1213,
            "src": "1932:111:3",
            "stateMutability": "nonpayable",
            "superFunction": 2738,
            "visibility": "internal"
          }
        ],
        "scope": 1214,
        "src": "1002:1044:3"
      }
    ],
    "src": "0:2047:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-10T10:03:22.873Z"
}